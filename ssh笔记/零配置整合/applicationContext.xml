<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- 引入外部的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 配置hibernate的相关属性 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource" />
		
		<!-- 直接扫描bean包，剩下的对应关系由框架完成，不需配置注射文件 -->
		<property name="packagesToScan">
			<list>
				<value>domain</value>
			</list>
		</property>
		
		<!-- 配置hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		
		<!-- 配置hibernate映射文件,如不适用注解方式，则需配置映射文件 -->
		<!-- <property name="mappingResources"> -->
		<!-- <list> -->
		<!-- <value>domain/Users.hbm.xml</value> -->
		<!-- <value>domain/Students.hbm.xml</value> -->
		<!-- </list> -->
		<!-- </property> -->
	</bean>
	<!-- hibernate零配置 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="bizMethods" expression="execution(* com.test.biz.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bizMethods" />
	</aop:config>

	<!-- 配置Action的类 -->

	<!-- usersaction -->
	<bean id="usersAction" class="action.UsersAction" scope="prototype">
		<property name="usersService" ref="usersService" />
	</bean>

	<!-- studentsaction -->
	<bean id="studentsAction" class="action.StudentsAction" scope="prototype">
		<property name="studentsService" ref="studentsService" />
		<property name="pageParameter" ref="PageParameter" />
		<property name="searchQuery" ref="SearchQuery" />
	</bean>

	<!-- 配置分页的类 -->
	<bean id="PageParameter" class="domain.PageParameter" scope="singleton" />
	<!-- 配置存放查询条件的类 -->
	<bean id="SearchQuery" class="domain.SearchQuery" scope="singleton" />
	<!-- 配置业务层的类 -->

	<!-- usersService -->
	<bean id="usersService" class="service.impl.UsersServiceImpl">
		<property name="usersDao" ref="usersDao" />
	</bean>

	<!-- studentssevice -->
	<bean id="studentsService" class="service.impl.StudentsServiceImpl">
		<property name="studentsDao" ref="StudentsDao" />
		<property name="searchQuery" ref="SearchQuery" />
	</bean>

	<!-- 配置DAO的类 -->

	<!-- usersdao -->
	<bean id="usersDao" class="dao.impl.UsersDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />

	</bean>

	<!-- studentsdao -->
	<bean id="StudentsDao" class="dao.impl.StudentsDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="searchQuery" ref="SearchQuery" />
		<property name="pageparameter" ref="PageParameter" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="false" />

</beans>
